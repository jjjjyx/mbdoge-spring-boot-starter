plugins {
    id 'java'
    id 'org.springframework.boot' version "$springVersion" apply false
    id 'io.spring.dependency-management' version "1.0.10.RELEASE" apply false
}

//apply from: 'properties.gradle'

sourceCompatibility = 1.8

dependencies {

}

configurations {
    // 支持通过group、module排除，可以同时使用
    all*.exclude group: 'commons-logging', module: 'commons-logging' // common-logging
    all*.exclude group: 'log4j', module: 'log4j' // log4j
    all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-core' // slf4j -> log4j2
    all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl' // log4j2
    all*.exclude group: 'org.slf4j', module: 'slf4j-jdk14' // slf4j -> jdk-logging
    all*.exclude group: 'org.slf4j', module: 'slf4j-jcl' // slf4j -> common-logging
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12' // slf4j -> log4j
}

def localRepositoryPath = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
allprojects  {
    group = 'cn.mbdoge.jyx'

    repositories {
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'maven'

//    apply plugin: 'io.spring.dependency-management'
//    apply plugin: 'java-library'
//    version = "$springBootVersion-82"
    test {
        useJUnitPlatform()
    }

    uploadArchives {
        repositories {
            //mavenDeployer 需要依赖 apply plugin: 'maven'
            mavenDeployer   {
                repository(url: localRepositoryPath)
                pom.project {
                    name = project.name
                    version = project.version
                    groupId = project.group
                }
            }
        }
    }
}